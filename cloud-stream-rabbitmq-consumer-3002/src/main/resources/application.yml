server:
  port: 3002

spring:
  application:
    name: stream-rabbit-consumer

  cloud:
    stream:
      binders: # 在此处配置要绑定的rabbitmq服务信息
        defaultRabbit: # 表示定义（相关mq）的名称，用于binding整合
          type: rabbit # 消息组件类型
          environment: # 设置rabbitmq的相关环境配置
            spring:
              rabbitmq:
                host: rabbitmq1
                port: 5672
                username: guest
                password: guest
      bindings: # 绑定器的集合
        input: # 绑定器元素的名称
          destination: defaultExchange # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息的类型，文本使用“test/plain”
          # 绑定mq的配置信息
          binder: defaultRabbit # 在多个绑定器的情况下，用于此绑定的绑定器的名称
          group: groupA

        output: # 绑定器元素的名称
          destination: defaultExchange # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息的类型，文本使用“test/plain”
          # 绑定mq的配置信息
          binder: defaultRabbit # 在多个绑定器的情况下，用于此绑定的绑定器的名称

        custom_input:
          destination: customExchange # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息的类型，文本使用“test/plain”
          # 绑定mq的配置信息
          binder: defaultRabbit # 在多个绑定器的情况下，用于此绑定的绑定器的名称
          group: customGroupA

      rabbit:
        bindings:
          input:
            consumer:
              ttl: 10000 # 默认不做限制，即无限。消息在队列中最大的存活时间。当消息滞留超过ttl时，会被当成消费失败消息，即会被转发到死信队列或丢弃.即消息在队列中存活的最大时间为 20s
              # DLQ相关
              autoBindDlq: true # 是否自动声明死信队列（DLQ）并将其绑定到死信交换机（DLX）。默认是false。
              republishToDlq: true
              deadLetterExchange: input-dle  #绑定exchange
              deadLetterQueueName: input-dlq  #死信队列名字：exchanName.queueName

          # 自定义的通道
          custom_input:
            consumer:
              ttl: 10000 # 默认不做限制，即无限。消息在队列中最大的存活时间。当消息滞留超过ttl时，会被当成消费失败消息，即会被转发到死信队列或丢弃.即消息在队列中存活的最大时间为 20s
              # DLQ相关
              autoBindDlq: true # 是否自动声明死信队列（DLQ）并将其绑定到死信交换机（DLX）。默认是false。
              republishToDlq: true
              deadLetterExchange: custom-input-dle  #绑定exchange
              deadLetterQueueName: custom-input-dlq  #死信队列名字：exchanName.queueName

# eureka配置
eureka:
  client:
    #表示是否将自己注册进EurekaServer
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #单机版
      defaultZone: http://localhost:7001/eureka
      #集群版
      # defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/